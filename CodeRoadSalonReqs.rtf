{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 HelveticaNeue-Medium;\f4\fnil\fcharset0 .AppleColorEmojiUI;\f5\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red219\green221\blue226;\red255\green255\blue255;
\red21\green23\blue26;\red0\green0\blue0;\red68\green106\blue255;\red60\green179\blue18;\red201\green201\blue201;
}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c88627\c89412\c90980;\cssrgb\c100000\c100000\c100000;
\cssrgb\c10588\c12157\c13725\c5098;\cssrgb\c0\c0\c0;\cssrgb\c33333\c51765\c100000;\cssrgb\c27451\c73725\c8235;\cssrgb\c82745\c82745\c82745;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid101\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Salon Appointment Scheduler\cb1 \
\
\pard\pardeftab720\sa200\partightenfactor0

\f1\b\fs28\fsmilli14400 \cf2 \cb4 Instructions\cb1 \
\pard\pardeftab720\sa120\partightenfactor0

\f0\b0\fs24 \cf2 \cb4 Follow the instructions and get all the user stories below to pass to finish the project. Create your database by logging in to psql with\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 psql --username=freecodecamp --dbname=postgres
\f0\fs24 \cb4 \strokec2 . You can query the database in your script with\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 psql --username=freecodecamp --dbname=salon -c "SQL QUERY HERE"
\f0\fs24 \cb4 \strokec2 , add more flags if you need to. Be sure to get creative, and have fun!\cb1 \
\pard\pardeftab720\sa120\partightenfactor0

\f3\b \cf2 \cb4 Don't forget to connect to your database to add tables after you create it
\f0\b0 \'a0
\f4 \uc0\u55357 \u56836 
\f0 \cb1 \

\f3\b \cb4 Hints:
\f0\b0 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Your script needs to finish running after doing any of the tasks described below or the tests won't pass\cb1 \
\ls1\ilvl0\cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The tests check the script output so don't use\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 clear
\f0\fs24 \cb4 \strokec2 \'a0or other commands which might erase it\cb1 \
\ls1\ilvl0\cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 See\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 examples.txt
\f0\fs24 \cb4 \strokec2 \'a0for example output of a passing script\cb1 \
\ls1\ilvl0\cb4 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The tests may add data to your database, feel free to delete it\cb1 \
\pard\pardeftab720\sa120\partightenfactor0

\f3\b \cf2 \cb4 Notes:
\f0\b0 \cb1 \uc0\u8232 \cb4 If you leave your virtual machine, your database may not be saved. You can make a dump of it by entering\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 pg_dump -cC --inserts -U freecodecamp salon > salon.sql
\f0\fs24 \cb4 \strokec2 \'a0in a bash terminal (not the psql one). It will save the commands to rebuild your database in\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 salon.sql
\f0\fs24 \cb4 \strokec2 . The file will be located where the command was entered. If it's anything inside the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 project
\f0\fs24 \cb4 \strokec2 \'a0folder, the file will be saved in the VM. You can rebuild the database by entering\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 psql -U postgres < salon.sql
\f0\fs24 \cb4 \strokec2 \'a0in a terminal where the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 .sql
\f0\fs24 \cb4 \strokec2 \'a0file is.\cb1 \
\pard\pardeftab720\sa120\partightenfactor0
\cf2 \cb4 If you are saving your progress on\'a0{\field{\*\fldinst{HYPERLINK "http://freecodecamp.org/"}}{\fldrslt \cf7 \strokec7 freeCodeCamp.org}}, after getting all the tests to pass, follow the instructions above to save a dump of your database. Save the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 salon.sql
\f0\fs24 \cb4 \strokec2 \'a0file, as well as the final version of your\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 salon.sh
\f0\fs24 \cb4 \strokec2 \'a0file, in a public repository and submit the URL to it on\'a0{\field{\*\fldinst{HYPERLINK "http://freecodecamp.org/"}}{\fldrslt \cf7 \strokec7 freeCodeCamp.org}}.\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\
\pard\pardeftab720\sa120\partightenfactor0
\cf2 \cb4 Complete the tasks below\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f5 \cf8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec8 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 You should create a database named\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 salon
\f0\fs24 \cb1 \strokec2 \uc0\u8232 \u8232 
\f5 \cf8 \strokec8 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 You should connect to your database, then create tables named\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 customers
\f0\fs24 \cb4 \strokec2 ,\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 appointments
\f0\fs24 \cb4 \strokec2 , and\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 services
\f0\fs24 \cb1 \strokec2 \uc0\u8232 \u8232 
\f5 \cf8 \strokec8 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 Each table should have a primary key column that automatically increments\cb1 \uc0\u8232 \u8232 
\f5 \cf8 \strokec8 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 Each primary key column should follow the naming convention,\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 table_name_id
\f0\fs24 \cb4 \strokec2 . For example, the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 customers
\f0\fs24 \cb4 \strokec2 \'a0table should have a\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 customer_id
\f0\fs24 \cb4 \strokec2 \'a0key. Note that there\'92s no\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 s
\f0\fs24 \cb4 \strokec2 \'a0at the end of\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 customer
\f0\fs24 \cb1 \strokec2 \uc0\u8232 \u8232 
\f5 \cf8 \strokec8 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 Your\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 appointments
\f0\fs24 \cb4 \strokec2 \'a0table should have a\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 customer_id
\f0\fs24 \cb4 \strokec2 \'a0foreign key that references the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 customer_id
\f0\fs24 \cb4 \strokec2 \'a0column from the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 customers
\f0\fs24 \cb4 \strokec2 \'a0table\cb1 \uc0\u8232 \u8232 
\f5 \cf8 \strokec8 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 Your\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 appointments
\f0\fs24 \cb4 \strokec2 \'a0table should have a\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 service_id
\f0\fs24 \cb4 \strokec2 \'a0foreign key that references the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 service_id
\f0\fs24 \cb4 \strokec2 \'a0column from the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 services
\f0\fs24 \cb4 \strokec2 \'a0table\cb1 \uc0\u8232 \u8232 
\f5 \cf8 \strokec8 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 Your\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 customers
\f0\fs24 \cb4 \strokec2 \'a0table should have\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 phone
\f0\fs24 \cb4 \strokec2 \'a0that is a\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 VARCHAR
\f0\fs24 \cb4 \strokec2 \'a0and must be unique\cb1 \uc0\u8232 \u8232 
\f5 \cf8 \strokec8 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 Your\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 customers
\f0\fs24 \cb4 \strokec2 \'a0and\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 services
\f0\fs24 \cb4 \strokec2 \'a0tables should have a\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 name
\f0\fs24 \cb4 \strokec2 \'a0column\cb1 \uc0\u8232 \u8232 
\f5 \cf8 \strokec8 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 Your\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 appointments
\f0\fs24 \cb4 \strokec2 \'a0table should have a\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 time
\f0\fs24 \cb4 \strokec2 \'a0column that is a\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 VARCHAR
\f0\fs24 \cb1 \strokec2 \uc0\u8232 \u8232 
\f5 \cf8 \strokec8 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 You should have at least three rows in your\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 services
\f0\fs24 \cb4 \strokec2 \'a0table for the different services you offer, one with a\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 service_id
\f0\fs24 \cb4 \strokec2 \'a0of\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 1
\f0\fs24 \cb1 \strokec2 \uc0\u8232 \u8232 
\f5 \cf9 \strokec9 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 You should create a script file named\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 salon.sh
\f0\fs24 \cb4 \strokec2 \'a0in the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 project
\f0\fs24 \cb4 \strokec2 \'a0folder\cb1 \uc0\u8232 \u8232 
\f5 \cf9 \strokec9 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 Your script file should have a \'93shebang\'94 that uses bash when the file is executed (use\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 #! /bin/bash
\f0\fs24 \cb4 \strokec2 )\cb1 \uc0\u8232 \u8232 
\f5 \cf9 \strokec9 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 Your script file should have executable permissions\cb1 \uc0\u8232 \u8232 
\f5 \cf9 \strokec9 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 You should not use the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 clear
\f0\fs24 \cb4 \strokec2 \'a0command in your script\cb1 \uc0\u8232 \u8232 
\f5 \cf9 \strokec9 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 You should display a numbered list of the services you offer before the first prompt for input, each with the format\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 #) <service>
\f0\fs24 \cb4 \strokec2 . For example,\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 1) cut
\f0\fs24 \cb4 \strokec2 , where\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 1
\f0\fs24 \cb4 \strokec2 \'a0is the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 service_id
\f0\fs24 \cb1 \strokec2 \uc0\u8232 \u8232 
\f5 \cf9 \strokec9 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 If you pick a service that doesn't exist, you should be shown the same list of services again\cb1 \uc0\u8232 \u8232 
\f5 \cf9 \strokec9 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 Your script should prompt users to enter a\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 service_id
\f0\fs24 \cb4 \strokec2 , phone number, a name if they aren\'92t already a customer, and a time. You should use\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 read
\f0\fs24 \cb4 \strokec2 \'a0to read these inputs into variables named\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 SERVICE_ID_SELECTED
\f0\fs24 \cb4 \strokec2 ,\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 CUSTOMER_PHONE
\f0\fs24 \cb4 \strokec2 ,\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 CUSTOMER_NAME
\f0\fs24 \cb4 \strokec2 , and\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 SERVICE_TIME
\f0\fs24 \cb1 \strokec2 \uc0\u8232 \u8232 
\f5 \cf9 \strokec9 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 If a phone number entered doesn\'92t exist, you should get the customers name and enter it, and the phone number, into the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 customers
\f0\fs24 \cb4 \strokec2 \'a0table\cb1 \uc0\u8232 \u8232 
\f5 \cf9 \strokec9 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 You can create a row in the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 appointments
\f0\fs24 \cb4 \strokec2 \'a0table by running your script and entering\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 1
\f0\fs24 \cb4 \strokec2 ,\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 555-555-5555
\f0\fs24 \cb4 \strokec2 ,\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 Fabio
\f0\fs24 \cb4 \strokec2 ,\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 10:30
\f0\fs24 \cb4 \strokec2 \'a0at each request for input if that phone number isn\'92t in the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 customers
\f0\fs24 \cb4 \strokec2 \'a0table. The row should have the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 customer_id
\f0\fs24 \cb4 \strokec2 \'a0for that customer, and the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 service_id
\f0\fs24 \cb4 \strokec2 \'a0for the service entered\cb1 \uc0\u8232 \u8232 
\f5 \cf9 \strokec9 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 You can create another row in the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 appointments
\f0\fs24 \cb4 \strokec2 \'a0table by running your script and entering\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 2
\f0\fs24 \cb4 \strokec2 ,\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 555-555-5555
\f0\fs24 \cb4 \strokec2 ,\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 11am
\f0\fs24 \cb4 \strokec2 \'a0at each request for input if that phone number is already in the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 customers
\f0\fs24 \cb4 \strokec2 \'a0table. The row should have the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 customer_id
\f0\fs24 \cb4 \strokec2 \'a0for that customer, and the\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 service_id
\f0\fs24 \cb4 \strokec2 \'a0for the service entered\cb1 \uc0\u8232 \u8232 
\f5 \cf9 \strokec9 \uc0\u8232 
\f0 \cf2 \cb4 \strokec2 After an appointment is successfully added, you should output the message\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 I have put you down for a <service> at <time>, <name>.
\f0\fs24 \cb4 \strokec2 \'a0For example, if the user chooses\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 cut
\f0\fs24 \cb4 \strokec2 \'a0as the service,\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 10:30
\f0\fs24 \cb4 \strokec2 \'a0is entered for the time, and their name is\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 Fabio
\f0\fs24 \cb4 \strokec2 \'a0in the database the output would be\'a0
\f2\fs19\fsmilli9600 \cb5 \strokec6 I have put you down for a cut at 10:30, Fabio.
\f0\fs24 \cb4 \strokec2 \'a0Make sure your script finishes running after completing any of the tasks above, or else the tests won't pass\cb1 \uc0\u8232 \
}